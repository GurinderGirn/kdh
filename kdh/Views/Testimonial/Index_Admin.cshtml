@model IEnumerable<kdh.Models.Testimonial>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>

@if (TempData["SuccessMessage"] != null)
{
    <div class="text-success text-center">@TempData["SuccessMessage"]</div>
}

<h2>Testimonials</h2>

<!-- AJAX -->
<section class="row">
    <div class="offset-md-1 col-md-10">
        @using (Ajax.BeginForm("Testimonial_Search_Admin", "Testimonial",
                    new AjaxOptions
                    {
                        HttpMethod = "POST",
                        UpdateTargetId = "search_results",
                        InsertionMode = InsertionMode.Replace
                    }, new { id = "search_form", autocomplete = "off" }
                    ))
        {
            <div class="form-inline row">
                <input type="text" name="term" class="form-control col-9" placeholder="Search testimonial content..." />
                <button type="submit" class="btn col-3">Search</button>
            </div>
        }
        <div id="search_results">

        </div>
    </div>
</section>

<nav>
    <div class="nav nav-tabs mt-5" id="nav-tab" role="tablist">
        <a class="nav-item nav-link active" id="nav-need-revision-tab" data-toggle="tab" href="#nav-need-revision" role="tab" aria-controls="nav-need-revision" aria-selected="true">Need revision</a>
        <a class="nav-item nav-link" id="nav-pending-tab" data-toggle="tab" href="#nav-pending" role="tab" aria-controls="nav-pending" aria-selected="false">Pending</a>
        <a class="nav-item nav-link" id="nav-published-tab" data-toggle="tab" href="#nav-published" role="tab" aria-controls="nav-published" aria-selected="false">Published</a>
        <a class="nav-item nav-link" id="nav-all-tab" data-toggle="tab" href="#nav-all" role="tab" aria-controls="nav-all" aria-selected="false">All</a>
    </div>
</nav>
<div class="tab-content" id="nav-tabContent">
    <!-- Start of need revision testimonial -->
    <div class="tab-pane fade show active" id="nav-need-revision" role="tabpanel" aria-labelledby="nav-need-revision-tab">
        <p>This is the list of testimonials that need to be reviewed.</p>
        @foreach (var item in Model)
         {
             if (item.Reviewed == "NO")
             {
             <hr />
             <div>
                <div class="font-weight-bold lead">@Html.DisplayNameFor(model => model.Subject): @Html.DisplayFor(modelItem => item.Subject)</div>
                <div>@Html.DisplayNameFor(model => model.Rate): @Html.DisplayFor(modelItem => item.Rate)/5</div>
                <div>@Html.DisplayFor(modelItem => item.Content)</div>
                <div>
                    @Html.DisplayNameFor(model => model.DepartmentId): @Html.DisplayFor(modelItem => item.department.department_name)
                </div>
                 <div>
                     @Html.DisplayNameFor(model => model.Reviewed): @Html.DisplayFor(modelItem => item.Reviewed)
                 </div>
                <div>By: @Html.DisplayFor(modelItem => item.Name) - @Html.DisplayFor(modelItem => item.Role)</div>
                <div>On: @Html.DisplayFor(modelItem => item.Timestamp)</div>
                <div>
                    @Html.ActionLink("Edit", "Edit_Admin", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete_Admin", new { id = item.Id })
                </div>
             </div>
             }
         }
    </div>

    <!-- Start of pending testimonial -->
    <div class="tab-pane fade" id="nav-pending" role="tabpanel" aria-labelledby="nav-pending-tab">
        <p>This is the list of testimonials that were moved here because of potentially bad content.</p>
        @foreach (var item in Model)
         {
             if (item.Reviewed == "PENDING")
             {
                <hr />
                <div>
                    <div class="font-weight-bold lead">@Html.DisplayNameFor(model => model.Subject): @Html.DisplayFor(modelItem => item.Subject)</div>
                    <div>@Html.DisplayNameFor(model => model.Rate): @Html.DisplayFor(modelItem => item.Rate)/5</div>
                    <div>@Html.DisplayFor(modelItem => item.Content)</div>
                    <div>
                        @Html.DisplayNameFor(model => model.DepartmentId): @Html.DisplayFor(modelItem => item.department.department_name)
                    </div>
                    <div>
                        @Html.DisplayNameFor(model => model.Reviewed): @Html.DisplayFor(modelItem => item.Reviewed)
                    </div>
                    <div>By: @Html.DisplayFor(modelItem => item.Name) - @Html.DisplayFor(modelItem => item.Role)</div>
                    <div>On: @Html.DisplayFor(modelItem => item.Timestamp)</div>
                    <div>
                        @Html.ActionLink("Edit", "Edit_Admin", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete_Admin", new { id = item.Id })
                    </div>

                </div>
             }
         }
    </div>

    <!-- Start of published testimonial -->
    <div class="tab-pane fade" id="nav-published" role="tabpanel" aria-labelledby="nav-published-tab">
        <p>This is the list of all testimonials that were approved by admin.</p>
        @foreach (var item in Model)
         {
             if (item.Reviewed == "YES")
             {
                <hr />
                <div>
                    <div class="font-weight-bold lead">@Html.DisplayNameFor(model => model.Subject): @Html.DisplayFor(modelItem => item.Subject)</div>
                    <div>@Html.DisplayNameFor(model => model.Rate): @Html.DisplayFor(modelItem => item.Rate)/5</div>
                    <div>@Html.DisplayFor(modelItem => item.Content)</div>
                    <div>
                        @Html.DisplayNameFor(model => model.DepartmentId): @Html.DisplayFor(modelItem => item.department.department_name)
                    </div>
                    <div>
                        @Html.DisplayNameFor(model => model.Reviewed): @Html.DisplayFor(modelItem => item.Reviewed)
                    </div>
                    <div>By: @Html.DisplayFor(modelItem => item.Name) - @Html.DisplayFor(modelItem => item.Role)</div>
                    <div>On: @Html.DisplayFor(modelItem => item.Timestamp)</div>
                    <div>
                        @Html.ActionLink("Edit", "Edit_Admin", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete_Admin", new { id = item.Id })
                    </div>

                </div>
             }
         }
    </div>
    <div class="tab-pane fade" id="nav-all" role="tabpanel" aria-labelledby="nav-all-tab">
        <p>This is the list of all testimonials from public.</p>
        @foreach (var item in Model)
        {
            <hr />
            <div>
                <div class="font-weight-bold lead">@Html.DisplayNameFor(model => model.Subject): @Html.DisplayFor(modelItem => item.Subject)</div>
                <div>@Html.DisplayNameFor(model => model.Rate): @Html.DisplayFor(modelItem => item.Rate)/5</div>
                <div>@Html.DisplayFor(modelItem => item.Content)</div>
                <div>
                    @Html.DisplayNameFor(model => model.DepartmentId): @Html.DisplayFor(modelItem => item.department.department_name)
                </div>
                <div>
                    @Html.DisplayNameFor(model => model.Reviewed): @Html.DisplayFor(modelItem => item.Reviewed)
                </div>
                <div>By: @Html.DisplayFor(modelItem => item.Name) - @Html.DisplayFor(modelItem => item.Role)</div>
                <div>On: @Html.DisplayFor(modelItem => item.Timestamp)</div>
                <div>
                    @Html.ActionLink("Edit", "Edit_Admin", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete_Admin", new { id = item.Id })
                </div>
            </div>

        }
    </div>

</div>

